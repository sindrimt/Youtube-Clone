[{"/Users/sindritomasson/Desktop/youtube/frontend/src/index.tsx":"1","/Users/sindritomasson/Desktop/youtube/frontend/src/App.tsx":"2","/Users/sindritomasson/Desktop/youtube/frontend/src/state/reducers/index.ts":"3","/Users/sindritomasson/Desktop/youtube/frontend/src/state/actions/users.js":"4","/Users/sindritomasson/Desktop/youtube/frontend/src/components/SideContainer/SideContainer.tsx":"5","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentDefault.tsx":"6","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentSearch.tsx":"7","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Navbar/Navbar.tsx":"8","/Users/sindritomasson/Desktop/youtube/frontend/src/state/reducers/users.js":"9","/Users/sindritomasson/Desktop/youtube/frontend/src/axios/axios.js":"10","/Users/sindritomasson/Desktop/youtube/frontend/src/firebase-config.js":"11","/Users/sindritomasson/Desktop/youtube/frontend/src/components/SideContainer/SideContentStyles.js":"12","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentStyles.js":"13","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Navbar/NavbarStyles.js":"14","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Search/Search.tsx":"15","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Card/Card.tsx":"16","/Users/sindritomasson/Desktop/youtube/frontend/src/components/LoadingCard/LoadingCard.tsx":"17","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Filters/Filter.tsx":"18","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Card/CardStyles.js":"19","/Users/sindritomasson/Desktop/youtube/frontend/src/components/LoadingCard/LoadingCardStyles.js":"20","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Filters/FilterStyles.js":"21","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Login/Login.jsx":"22","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Login/LoginStyles.js":"23"},{"size":591,"mtime":1649682123307,"results":"24","hashOfConfig":"25"},{"size":934,"mtime":1650212842606,"results":"26","hashOfConfig":"25"},{"size":307,"mtime":1650274560016,"results":"27","hashOfConfig":"25"},{"size":1097,"mtime":1650274477008,"results":"28","hashOfConfig":"25"},{"size":5891,"mtime":1650276349282,"results":"29","hashOfConfig":"25"},{"size":6514,"mtime":1650217181404,"results":"30","hashOfConfig":"25"},{"size":6663,"mtime":1650056138706,"results":"31","hashOfConfig":"25"},{"size":2878,"mtime":1650273468647,"results":"32","hashOfConfig":"25"},{"size":836,"mtime":1650274551654,"results":"33","hashOfConfig":"25"},{"size":290,"mtime":1649240922445,"results":"34","hashOfConfig":"25"},{"size":1457,"mtime":1650228861395,"results":"35","hashOfConfig":"25"},{"size":2481,"mtime":1650189046675,"results":"36","hashOfConfig":"25"},{"size":1167,"mtime":1650115421435,"results":"37","hashOfConfig":"25"},{"size":1034,"mtime":1650142924374,"results":"38","hashOfConfig":"25"},{"size":1071,"mtime":1650099383288,"results":"39","hashOfConfig":"25"},{"size":2938,"mtime":1650046137389,"results":"40","hashOfConfig":"25"},{"size":1007,"mtime":1650216453914,"results":"41","hashOfConfig":"25"},{"size":738,"mtime":1650115193728,"results":"42","hashOfConfig":"25"},{"size":1740,"mtime":1650189792015,"results":"43","hashOfConfig":"25"},{"size":1434,"mtime":1650114955050,"results":"44","hashOfConfig":"25"},{"size":1235,"mtime":1650098759724,"results":"45","hashOfConfig":"25"},{"size":3358,"mtime":1650276214549,"results":"46","hashOfConfig":"25"},{"size":474,"mtime":1650273467083,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"12s3jvu",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"51"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/sindritomasson/Desktop/youtube/frontend/src/index.tsx",[],[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/App.tsx",["128","129","130"],[],"import React, { useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport SideContainer from \"./components/SideContainer/SideContainer\";\nimport Content from \"./components/Content/Content\";\nimport ContentSearch from \"./components/Content/ContentSearch\";\nimport ContentDefault from \"./components/Content/ContentDefault\";\n\nimport { Gap } from \"./styles/GloabalStyles\";\nimport { useDispatch } from \"react-redux\";\nimport { getUsers } from \"./state/actions/users\";\n\nimport \"./styles/app.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navbar />\n      <SideContainer />\n      <Routes>\n        <Route path=\"/\" element={<ContentDefault />} />\n        <Route path=\"/results\" element={<ContentSearch />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/state/reducers/index.ts",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/state/actions/users.js",[],[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/SideContainer/SideContainer.tsx",["131","132"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingBar from \"react-top-loading-bar\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSubscriptions } from \"../../state/actions/users\";\nimport { State } from \"../../state/reducers\";\n\nimport {\n  Sidebar,\n  SidebarSmall,\n  Logo,\n  SubscribedOuter,\n  SubscribedOuter2,\n  Subscribed,\n  Line,\n  SubscribedOuter3,\n  SubProfilePicture,\n  SubscribedSmall,\n} from \"./SideContentStyles\";\n\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport { BsFillHouseDoorFill } from \"react-icons/bs\";\nimport { RiCompass3Line, RiYoutubeFill, RiYoutubeLine, RiVideoLine } from \"react-icons/ri\";\nimport { MdOutlineVideoLibrary } from \"react-icons/md\";\nimport { BsClockHistory, BsClock, BsChevronDown } from \"react-icons/bs\";\nimport { BiLike } from \"react-icons/bi\";\n\nimport logo from \"../../assets/ytlogotr.png\";\nimport \"./sidecontainer.css\";\n\nconst SideContainer = () => {\n  const [expand, setExpand] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n\n  const subs = useSelector((state: State) => state.subs);\n\n  //todo SUBSCRIPTION API URL\n  //todo ==============================\n  //https://www.googleapis.com/youtube/v3/subscriptions?key=AIzaSyB59He1O3kiRo6FXq0XZ9klPPl300Wy_yw&part=snippet&channelId=UC0sEIyXXalzD1lbwm3D2xpA&maxResults=8\n  //todo ==============================\n  //todo SUBSCRIPTION API URL\n\n  const [progress, setProgress] = useState(0);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // Gets the window size\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  const handleClick = () => {\n    setExpand(!expand);\n  };\n\n  const logoClick = () => {\n    setProgress(progress + 100);\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      <LoadingBar color=\"#f11946\" progress={progress} onLoaderFinished={() => setProgress(0)} />\n      <Logo src={logo} onClick={logoClick} />\n      <AiOutlineMenu color=\"white\" size={20} className=\"hamburger_menu\" onClick={handleClick} />\n\n      {/* If the width if more than 1330px or expanded, display full sidebar */}\n      {/* Else display small sidebar */}\n\n      {expand && width > 1330 ? (\n        <Sidebar>\n          <SubscribedOuter>\n            <Subscribed>\n              <BsFillHouseDoorFill color=\"white\" size={21} /> <span className=\"textSpan\">Startside</span>\n            </Subscribed>\n            <Subscribed>\n              <RiCompass3Line color=\"white\" size={24} /> <span className=\"textSpan\">Utforsk</span>\n            </Subscribed>\n            <Subscribed>\n              <RiYoutubeFill color=\"white\" size={22} /> <span className=\"textSpan\">Shorts</span>\n            </Subscribed>\n            <Subscribed>\n              <RiYoutubeLine color=\"white\" size={22} /> <span className=\"textSpan\">Abbonomenter</span>\n            </Subscribed>\n          </SubscribedOuter>\n\n          <Line />\n\n          <SubscribedOuter2>\n            <Subscribed>\n              <MdOutlineVideoLibrary color=\"white\" size={21} /> <span className=\"textSpan\">Bibliotek</span>\n            </Subscribed>\n            <Subscribed>\n              <BsClockHistory color=\"white\" size={22} /> <span className=\"textSpan\">Logg</span>\n            </Subscribed>\n            <Subscribed>\n              <RiVideoLine color=\"white\" size={22} /> <span className=\"textSpan\">Videoene dine</span>\n            </Subscribed>\n            <Subscribed>\n              <BsClock color=\"white\" size={21} /> <span className=\"textSpan\">Se senere</span>\n            </Subscribed>\n            <Subscribed>\n              <BiLike color=\"white\" size={21} /> <span className=\"textSpan\">Likte videoer</span>\n            </Subscribed>\n            <Subscribed>\n              <BsChevronDown color=\"white\" size={15} /> <span className=\"textSpanArrow\">Vis mer</span>\n            </Subscribed>\n          </SubscribedOuter2>\n\n          <Line />\n          {/* If the user is logged in => show subscriptions, else not */}\n          {Object.keys(subs).length === 0 && subs.constructor === Object ? (\n            <span style={{ color: \"white\" }}>LOGG PÅ</span>\n          ) : (\n            <>\n              {console.log(subs)}\n\n              <SubscribedOuter3>\n                <Subscribed>\n                  <span className=\"abbonomenter\">ABBONOMENTER</span>\n                </Subscribed>\n\n                {subs.result.items?.map((sub: any, index: number) => {\n                  return (\n                    <Subscribed key={index}>\n                      <SubProfilePicture src={sub.snippet.thumbnails.high.url} />\n                      <span className=\"textSpanSub\">{sub.snippet.title}</span>\n                    </Subscribed>\n                  );\n                })}\n              </SubscribedOuter3>\n            </>\n          )}\n        </Sidebar>\n      ) : (\n        <SidebarSmall>\n          <SubscribedSmall>\n            <BsFillHouseDoorFill color=\"white\" size={21} />\n            <span className=\"under\">Startside</span>\n          </SubscribedSmall>\n          <SubscribedSmall>\n            <RiCompass3Line color=\"white\" size={24} />\n            <span className=\"under\">Utforsk</span>\n          </SubscribedSmall>\n          <SubscribedSmall>\n            <RiYoutubeFill color=\"white\" size={22} />\n            <span className=\"under\">Shorts</span>\n          </SubscribedSmall>\n          <SubscribedSmall>\n            <RiYoutubeLine color=\"white\" size={22} />\n            <span className=\"under\">Abbonomenter</span>\n          </SubscribedSmall>\n          <SubscribedSmall>\n            <MdOutlineVideoLibrary color=\"white\" size={21} />\n            <span className=\"under\">Bibliotek</span>\n          </SubscribedSmall>\n        </SidebarSmall>\n      )}\n    </>\n  );\n};\n\nexport default SideContainer;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentDefault.tsx",["133","134","135","136","137","138"],[],"import React, { useState, useEffect } from \"react\";\nimport LoadingBar from \"react-top-loading-bar\";\n\nimport Card from \"../Card/Card\";\nimport { GridContainer, Outer, LoadingOuter } from \"./ContentStyles\";\n\nimport axios from \"axios\";\n\nimport \"./content.css\";\nimport LoadingCard from \"../LoadingCard/LoadingCard\";\n\nconst ContentDefault: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<Boolean>(true);\n  const [videoResult, setVideoResult] = useState<any[]>();\n  const [profileThumbnails, setProfileThumbnails] = useState<any[]>([]);\n\n  const [progress, setProgress] = useState(0);\n\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  //const amount = useSelector((state: State) => state.bank);\n  useEffect(() => {\n    fetchVideoData();\n  }, []);\n\n  const fetchVideoData = () => {\n    // Gives basic information about the video\n    const searchResults = `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}\n                           &part=snippet,id&maxResults=20&q=rick&order=viewCount`;\n\n    const searchResults2 = `https://www.googleapis.com/youtube/v3/videos?key=${API_KEY}&part=snippet&chart=mostPopular&maxResults=20`;\n\n    axios(searchResults2).then((res) => {\n      //console.log(res);\n      const videoTuple: any = new Map();\n\n      const requests = res.data.items.map((video: any) => {\n        //console.log(video);\n        // Gives a more detailed information about the video\n        const url = `https://www.googleapis.com/youtube/v3/videos?id=${video.id}&key=${API_KEY}\n                     &part=snippet,contentDetails,statistics,status`;\n\n        // Gives information about the channel\n        const profileUrl = `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${video.snippet.channelId}&key=${API_KEY}`;\n\n        // Sets the key in the Map to the videoId\n        // console.log(video);\n        videoTuple.set(video.id, []);\n\n        // Two return statements separated by comma\n        // The first return statement fills up the first position in the array in the Map with res.data\n        // The second return statement fills up the second position in the array in the Map with the profile picture\n\n        /**  The return statements does not run synchronously, but when the loop is done, the first and second\n           positions in the array will be filled up in the correct order since the return statements are independent **/\n\n        return (\n          axios.get(url).then((res) => {\n            //console.log(res.data);\n            videoTuple.get(video.id)[0] = res.data;\n            //console.log(video.id.videoId);\n          }),\n          axios.get(profileUrl).then((res) => {\n            //console.log(res);\n            //console.log(res);\n            videoTuple.get(video.id)[1] = res.data.items[0].snippet.thumbnails.default.url;\n            //console.log(video.id.videoId);\n            //yeet\n          })\n        );\n      });\n\n      // When all request are finished inside requests\n      return Promise.all(requests).then(() => {\n        const posts: any = [];\n        const profilePictures: any = [];\n\n        videoTuple.forEach((video: any) => {\n          posts.push(video[0]);\n          profilePictures.push(video[1]);\n        });\n\n        setVideoResult(posts);\n        setProfileThumbnails(profilePictures);\n        setIsLoading(false);\n      });\n    });\n  };\n  // Displaying loading while waiting for fetching data\n  if (isLoading) {\n    let arr = new Array(20);\n    return (\n      <LoadingOuter>\n        <GridContainer>\n          {/* Displays 20 loading cards while loading content*/}\n          {Array.apply(0, new Array(20)).map((i, index) => {\n            return <LoadingCard key={index} />;\n          })}\n        </GridContainer>\n      </LoadingOuter>\n    );\n  }\n  // Filtrer ut alle undefined objects\n  let filteredArray: Array<any> = [];\n  const filtered = videoResult?.filter((element) => {\n    if (element === undefined) {\n      return false;\n    }\n    filteredArray.push(element);\n  });\n\n  return (\n    <>\n      <LoadingBar color=\"#f11946\" progress={progress} onLoaderFinished={() => setProgress(0)} />\n      <Outer>\n        <GridContainer>\n          {filteredArray?.map(({ items }, index) => {\n            // Checks if a maxres image exists\n            // If it does: set maxres, else set highres\n            let imageRes: string = items[0].snippet.thumbnails.maxres ? \"maxresdefault\" : \"mqdefault\";\n            let pp: string = profileThumbnails[index];\n\n            let videoTime = items[0].contentDetails.duration;\n\n            const convertTime = (dur: string | any) => {\n              if (dur.includes(\"D\")) {\n                return \"> 24h\";\n              }\n              let match = dur.match(/PT(\\d+H)?(\\d+M)?(\\d+S)?/);\n\n              match = match?.slice(1).map(function (x: any) {\n                if (x != null) {\n                  return x.replace(/\\D/, \"\");\n                }\n              });\n\n              const hours = parseInt(match[0]) || 0;\n              const minutes = parseInt(match[1]) || 0;\n              const seconds = parseInt(match[2]) || 0;\n\n              const secs = hours * 3600 + minutes * 60 + seconds;\n\n              if (secs >= 3600) {\n                let shortTime = new Date(secs * 1000).toISOString().substr(11, 8);\n                let shortTimeSplit = shortTime.split(\":\");\n\n                return `${shortTimeSplit[0].substring(1)}:${shortTimeSplit[1]}:${shortTimeSplit[2]}`;\n              } else {\n                let shortTime = new Date(secs * 1000).toISOString().substr(14, 5);\n                let shortTimeSplit = shortTime.split(\":\");\n\n                if (parseInt(shortTimeSplit[0]) < 10) {\n                  return `${shortTimeSplit[0].substring(1)}:${shortTimeSplit[1]}`;\n                } else {\n                  return new Date(secs * 1000).toISOString().substr(14, 5);\n                }\n              }\n            };\n\n            const duration = convertTime(videoTime);\n\n            //console.log(items);\n            return (\n              <Card\n                key={index}\n                title={items[0].snippet.title.slice(0, 50)}\n                imageId={items[0].id}\n                imageRes={imageRes}\n                channel={items[0].snippet.channelTitle}\n                profilePicture={pp}\n                views={items[0].statistics.viewCount}\n                time={items[0].snippet.publishedAt}\n                duration={duration}\n              />\n            );\n          })}\n        </GridContainer>\n      </Outer>\n    </>\n  );\n};\n\nexport default ContentDefault;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentSearch.tsx",["139","140","141","142","143","144","145","146","147","148"],[],"import React, { useState, useEffect } from \"react\";\nimport LoadingBar from \"react-top-loading-bar\";\n\nimport Card from \"../Card/Card\";\nimport { GridContainer, Outer } from \"./ContentStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { State } from \"../../state/reducers\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport \"./content.css\";\n\ninterface ContentProps {\n  searchTerm?: string;\n}\n\nconst Content: React.FC<ContentProps> = ({ searchTerm /* useless for now */ }) => {\n  const [isLoading, setIsLoading] = useState<Boolean>(true);\n  const [videoResult, setVideoResult] = useState<any[]>([]);\n  const [profileThumbnails, setProfileThumbnails] = useState<any[]>([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchResult = searchParams.get(\"search_query\" || \"\");\n\n  const [progress, setProgress] = useState(0);\n\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  //let { search_query } = useParams();\n  //console.log(\"Search Page\");\n\n  useEffect(() => {\n    setProgress(progress + staticStart());\n    fetchVideoData();\n  }, [searchResult]);\n\n  const staticStart = () => {\n    let min = Math.ceil(3);\n    let max = Math.floor(7);\n    return Math.floor((Math.random() * (max - min) + min) * 10);\n  };\n\n  const fetchVideoData = () => {\n    //ref.current.staticStart();\n    // Gives basic information about the video\n    const searchResults = `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}\n                           &part=snippet,id&maxResults=20&q=${searchResult}&order=viewCount&type=video`;\n\n    axios(searchResults).then((res) => {\n      const videoTuple: any = new Map();\n\n      const requests = res.data.items?.map((video: any) => {\n        // Gives a more detailed information about the video\n        const url = `https://www.googleapis.com/youtube/v3/videos?id=${video.id.videoId}&key=${API_KEY}\n                     &part=snippet,contentDetails,statistics,status`;\n\n        // Gives information about the channel\n        const profileUrl = `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${video.snippet.channelId}&key=${API_KEY}`;\n\n        // Sets the key in the Map to the videoId\n        videoTuple.set(video.id.videoId, []);\n\n        // Two return statements separated by comma\n        // The first return statement fills up the first position in the array in the Map with res.data\n        // The second return statement fills up the second position in the array in the Map with the profile picture\n\n        /**  The return statements does not run synchronously, but when the loop is done, the first and second\n           positions in the array will be filled up in the correct order since the return statements are independent **/\n\n        return (\n          axios.get(url).then((res) => {\n            videoTuple.get(video.id.videoId)[0] = res.data;\n            //console.log(video.id.videoId);\n          }),\n          axios.get(profileUrl).then((res) => {\n            videoTuple.get(video.id.videoId)[1] = res.data.items[0].snippet.thumbnails.default.url;\n            //console.log(video.id.videoId);\n          })\n        );\n      });\n\n      // When all request are finished inside requests\n      return Promise.all(requests).then(() => {\n        const posts: any = [];\n        const profilePictures: any = [];\n\n        videoTuple.forEach((video: any) => {\n          posts.push(video[0]);\n          profilePictures.push(video[1]);\n        });\n        setVideoResult(posts);\n        setProfileThumbnails(profilePictures);\n        setIsLoading(false);\n        setProgress(progress + 100);\n        //setProgress((progress) => 100);\n      });\n    });\n  };\n  // Displaying loading while waiting for fetching data\n  if (isLoading) {\n    return <div></div>;\n  }\n\n  // Filtrer ut alle undefined objects\n  let filteredArray: Array<any> = [];\n  const filtered = videoResult?.filter((element) => {\n    if (element === undefined) {\n      return false;\n    }\n    filteredArray.push(element);\n  });\n\n  return (\n    <>\n      <LoadingBar color=\"#f11946\" progress={progress} onLoaderFinished={() => setProgress(0)} />\n      <Outer>\n        <GridContainer>\n          {filteredArray?.map(({ items }, index) => {\n            // Checks if a maxres image exists\n            // If it does: set maxres, else set highres\n            let imageRes: string = items[0].snippet.thumbnails.maxres ? \"maxresdefault\" : \"mqdefault\";\n            let pp: string = profileThumbnails[index];\n\n            // Youtube videotime duration weird ass format\n            let videoTime = items[0].contentDetails.duration;\n\n            // Converts youtube weird format to good format\n            const convertTime = (dur: string | any) => {\n              if (dur.includes(\"D\")) {\n                return \"> 24h\";\n              }\n              let match = dur.match(/PT(\\d+H)?(\\d+M)?(\\d+S)?/);\n\n              match = match.slice(1).map(function (x: any) {\n                if (x != null) {\n                  return x.replace(/\\D/, \"\");\n                }\n              });\n\n              const hours = parseInt(match[0]) || 0;\n              const minutes = parseInt(match[1]) || 0;\n              const seconds = parseInt(match[2]) || 0;\n\n              const secs = hours * 3600 + minutes * 60 + seconds;\n\n              if (secs >= 3600) {\n                let shortTime = new Date(secs * 1000).toISOString().substr(11, 8);\n                let shortTimeSplit = shortTime.split(\":\");\n\n                return `${shortTimeSplit[0].substring(1)}:${shortTimeSplit[1]}:${shortTimeSplit[2]}`;\n              } else {\n                let shortTime = new Date(secs * 1000).toISOString().substr(14, 5);\n                let shortTimeSplit = shortTime.split(\":\");\n\n                if (parseInt(shortTimeSplit[0]) < 10) {\n                  return `${shortTimeSplit[0].substring(1)}:${shortTimeSplit[1]}`;\n                } else {\n                  return new Date(secs * 1000).toISOString().substr(14, 5);\n                }\n              }\n            };\n\n            const duration = convertTime(videoTime);\n\n            return (\n              <Card\n                key={index}\n                title={items[0].snippet.title.slice(0, 50)}\n                imageId={items[0].id}\n                imageRes={imageRes}\n                channel={items[0].snippet.channelTitle}\n                profilePicture={pp}\n                views={items[0].statistics.viewCount}\n                time={items[0].snippet.publishedAt}\n                duration={duration}\n              />\n            );\n          })}\n        </GridContainer>\n      </Outer>\n    </>\n  );\n};\n\nexport default Content;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Navbar/Navbar.tsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162"],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/state/reducers/users.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/axios/axios.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/firebase-config.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/SideContainer/SideContentStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/Navbar/NavbarStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/Search/Search.tsx",["163"],[],"import React, { useEffect, useState } from \"react\";\n\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport \"./search.css\";\n\nconst Search = () => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    navigate(`/results?search_query=${searchInput}`);\n  };\n\n  return (\n    <>\n      <div className=\"outer_search_box\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"search_box\"\n            placeholder=\"Søk\"\n            onChange={(e) => setSearchInput(e.currentTarget.value)}\n          />\n        </form>\n        <div className=\"after\">\n          <AiOutlineSearch size={22} className=\"icon\" />\n        </div>\n        <div className=\"microphone\">\n          <FaMicrophone size={18} className=\"mic_icon\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Card/Card.tsx",["164","165","166"],[],"import React from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport {\n  Outer,\n  ImageContainer,\n  Image,\n  ProfilePicture,\n  Right,\n  Left,\n  InfoContainer,\n  Channel,\n  Upload,\n  Views,\n  Title,\n  Duration,\n} from \"./CardStyles\";\n\nimport \"./CardStyles\";\n\ntype Props = {\n  title: string;\n  imageId: string | any;\n  channel: string;\n  imageRes: string;\n  profilePicture: string;\n  time: string | any;\n  views: number | any;\n  duration: any;\n};\n\nconst Card = ({ title, imageId, channel, imageRes, profilePicture, views, time, duration }: Props) => {\n  // Converts views to a shorter format\n  var unitlist = [\"\", \"k\", \"mill.\"];\n  let sign = Math.sign(views);\n  let unit = 0;\n  while (Math.abs(views) > 1000) {\n    unit = unit + 1;\n    views = Math.floor(Math.abs(views) / 100) / 10;\n  }\n  // Removes the decimal if unit is K\n  if (unitlist[unit] == \"k\") {\n    views = Math.trunc(views) + \"k\";\n  } else {\n    views = sign * views + \" \" + unitlist[unit];\n    // Converts to string and replaces . with ,\n    views = views.toString().replace(\".\", \",\");\n  }\n\n  // Reassignment of time gotten from API\n  time = new Date(time.slice(0, -1));\n\n  // Some constants for time measurements\n  const msToHours = 1000 * 3600;\n\n  const hours = (Date.now() - time) / msToHours;\n\n  const minutes = msToHours / 60;\n  const day = 24;\n  const week = 168;\n  const month = 730;\n  const year = 8765;\n\n  // Converts time from upload to now in a nice format\n  if (hours < 1) {\n    time = Math.floor((Date.now() - time) / minutes);\n    time += time > 1 ? \" minutter\" : \" minutt\";\n  } else if (hours >= 1 && hours < 24) {\n    time = Math.floor((Date.now() - time) / msToHours);\n    time += time > 1 ? \" timer\" : \" time\";\n  } else if (hours >= day && hours < week) {\n    time = Math.floor((Date.now() - time) / (msToHours * day)) + \" døgn\";\n  } else if (hours >= week && hours < month) {\n    time = Math.floor((Date.now() - time) / (msToHours * week));\n    time += time > 1 ? \" uker\" : \" uke\";\n  } else if (hours >= month && hours < year) {\n    time = Math.floor((Date.now() - time) / (msToHours * month));\n    time += time > 1 ? \" måneder\" : \" måned\";\n  } else {\n    time = Math.floor((Date.now() - time) / (msToHours * year)) + \" år\";\n  }\n\n  return (\n    <>\n      <Outer>\n        <ImageContainer>\n          <Image src={`https://i.ytimg.com/vi/${imageId}/${imageRes}.jpg`} alt=\"Image\" />\n          <Duration>{duration}</Duration>\n        </ImageContainer>\n\n        <InfoContainer>\n          <Left>\n            <ProfilePicture src={profilePicture} />\n          </Left>\n          <Right>\n            <Title>\n              {title} <br />{\" \"}\n            </Title>\n            <Channel>\n              {channel} <br />\n              <Views>Sett {views} ganger</Views>\n              <Upload>for {time} siden</Upload>\n            </Channel>\n          </Right>\n        </InfoContainer>\n      </Outer>\n    </>\n  );\n};\n\nexport default Card;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/LoadingCard/LoadingCard.tsx",["167","168","169","170"],[],"import React from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport {\n  Outer,\n  ImageContainer,\n  Image,\n  ProfilePicture,\n  Right,\n  Left,\n  InfoContainer,\n  Channel,\n  Upload,\n  Title,\n} from \"./LoadingCardStyles\";\n\nimport \"./LoadingCardStyles\";\n\ntype Props = {\n  title?: string;\n  imageId?: string | any;\n  channel?: string;\n  imageRes?: string;\n  profilePicture?: string;\n  time?: number;\n  views?: number;\n  duration?: any;\n};\n\nconst LoadingCard = () => {\n  return (\n    <>\n      <Outer>\n        <ImageContainer>\n          <Image />\n        </ImageContainer>\n\n        <InfoContainer>\n          <Left>\n            <ProfilePicture />\n          </Left>\n          <Right>\n            <Title>\n              test Lorem ipsum dolorrrrrr ss ss <br />\n            </Title>\n            <Channel>\n              happy mealSD SDddd\n              <br />\n            </Channel>\n          </Right>\n        </InfoContainer>\n      </Outer>\n    </>\n  );\n};\n\nexport default LoadingCard;\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Filters/Filter.tsx",["171"],[],"import React, { useEffect, useRef } from \"react\";\n\nimport { FilterContainer, FilterContent, Tag } from \"./FilterStyles\";\n\nexport const Filter = () => {\n  const tags: any /* Array<string> */ = [\n    \"Mattematikk\",\n    \"Matlagingsprogrammer\",\n    \"Gaming\",\n    \"Direkte\",\n    \"Minecraft Bedrock\",\n    \"Tegnefilmer\",\n    \"Kunshåndtverk\",\n    \"Kunshåndtverk\",\n    \"Action\",\n  ];\n\n  const buttonRef: any = React.useRef(null);\n\n  useEffect(() => {\n    buttonRef.current.focus();\n  }, []);\n\n  return (\n    <FilterContainer>\n      <FilterContent>\n        <Tag ref={buttonRef}>Alle</Tag>\n        {tags.map((tag: string, index: number) => (\n          <Tag key={index}>{tag}</Tag>\n        ))}\n      </FilterContent>\n    </FilterContainer>\n  );\n};\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Card/CardStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/LoadingCard/LoadingCardStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/Filters/FilterStyles.js",[],[],"/Users/sindritomasson/Desktop/youtube/frontend/src/components/Login/Login.jsx",["172","173"],[],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeUrl, setUser, setSubscriptions } from \"../../state/actions/users\";\n\nimport { LoginButton, ProfilePic } from \"./LoginStyles\";\nimport { IoPersonCircleOutline } from \"react-icons/io5\";\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  function authenticate() {\n    return window.gapi.auth2\n      .getAuthInstance()\n      .signIn({ scope: \"https://www.googleapis.com/auth/youtube\" })\n      .then((res) => {\n        console.log(res);\n        // Dispatches the current user\n        dispatch(setUser(window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile()));\n      });\n  }\n  function loadClient() {\n    window.gapi.client.setApiKey(`${process.env.REACT_APP_API_KEY_2}`);\n    return window.gapi.client.load(\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\").then(\n      function () {\n        console.log(\"GAPI client loaded for API\");\n        execute();\n      },\n      function (err) {\n        console.error(\"Error loading GAPI client for API\", err);\n      }\n    );\n  }\n  // Make sure the client is loaded and sign-in is complete before calling this method.\n  function execute() {\n    return window.gapi.client.youtube.subscriptions\n      .list({\n        part: [\"snippet\"],\n        maxResults: 10,\n        mine: true,\n      })\n      .then(\n        function (response) {\n          // Handle the results here (response.result has the parsed body).\n          console.log(\"Response\", response);\n          dispatch(setSubscriptions(response));\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  }\n  window.gapi.load(\"client:auth2\", function () {\n    window.gapi.auth2.init({ client_id: `${process.env.REACT_APP_CLIENT_ID}` });\n  });\n\n  // idk man returnerer true uansett :P\n  const checkUser = () => {\n    console.log(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    console.log(\"Current user : \" + window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName());\n  };\n\n  const handleLogout = () => {\n    // logs out by emptying google user object and dispatching the user object to an empty object\n    window.gapi.auth2.getAuthInstance().then((res) => console.log(res));\n    dispatch(setUser({}));\n    dispatch(setSubscriptions({}));\n  };\n\n  return (\n    <>\n      {Object.keys(user).length === 0 && user.constructor === Object ? (\n        <LoginButton onClick={() => authenticate().then(loadClient)}>\n          <span style={{ padding: \"7px\" }}>\n            <IoPersonCircleOutline color=\"#3EA6FF\" size={25} />\n          </span>\n          LOGG PÅ\n        </LoginButton>\n      ) : (\n        <>\n          {console.log(user)}\n          <ProfilePic src={user.getImageUrl()} alt=\"PP\" />\n          <button onClick={handleLogout}>Sign Out</button>\n        </>\n      )}\n\n      <button onClick={() => execute()}>Execute</button>\n      {/* <button onClick={() => checkUser()}>check user</button> */}\n    </>\n  );\n};\n","/Users/sindritomasson/Desktop/youtube/frontend/src/components/Login/LoginStyles.js",[],[],{"ruleId":"174","severity":1,"message":"175","line":2,"column":25,"nodeType":"176","messageId":"177","endLine":2,"endColumn":29},{"ruleId":"174","severity":1,"message":"178","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":15},{"ruleId":"174","severity":1,"message":"179","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":13},{"ruleId":"174","severity":1,"message":"180","line":5,"column":23,"nodeType":"176","messageId":"177","endLine":5,"endColumn":34},{"ruleId":"174","severity":1,"message":"181","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":24,"column":6,"nodeType":"184","endLine":24,"endColumn":8,"suggestions":"185"},{"ruleId":"174","severity":1,"message":"186","line":28,"column":11,"nodeType":"176","messageId":"177","endLine":28,"endColumn":24},{"ruleId":"174","severity":1,"message":"187","line":91,"column":9,"nodeType":"176","messageId":"177","endLine":91,"endColumn":12},{"ruleId":"174","severity":1,"message":"188","line":105,"column":9,"nodeType":"176","messageId":"177","endLine":105,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":105,"column":50,"nodeType":"191","messageId":"192","endLine":105,"endColumn":52},{"ruleId":"189","severity":1,"message":"193","line":131,"column":43,"nodeType":"194","messageId":"192","endLine":131,"endColumn":52},{"ruleId":"174","severity":1,"message":"180","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":21},{"ruleId":"174","severity":1,"message":"195","line":6,"column":23,"nodeType":"176","messageId":"177","endLine":6,"endColumn":34},{"ruleId":"174","severity":1,"message":"196","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":15},{"ruleId":"174","severity":1,"message":"197","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":21},{"ruleId":"174","severity":1,"message":"198","line":8,"column":23,"nodeType":"176","messageId":"177","endLine":8,"endColumn":32},{"ruleId":"174","severity":1,"message":"199","line":23,"column":24,"nodeType":"176","messageId":"177","endLine":23,"endColumn":39},{"ruleId":"182","severity":1,"message":"200","line":35,"column":6,"nodeType":"184","endLine":35,"endColumn":20,"suggestions":"201"},{"ruleId":"174","severity":1,"message":"188","line":106,"column":9,"nodeType":"176","messageId":"177","endLine":106,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":106,"column":50,"nodeType":"191","messageId":"192","endLine":106,"endColumn":52},{"ruleId":"189","severity":1,"message":"193","line":134,"column":42,"nodeType":"194","messageId":"192","endLine":134,"endColumn":51},{"ruleId":"174","severity":1,"message":"202","line":6,"column":36,"nodeType":"176","messageId":"177","endLine":6,"endColumn":47},{"ruleId":"174","severity":1,"message":"203","line":6,"column":49,"nodeType":"176","messageId":"177","endLine":6,"endColumn":59},{"ruleId":"174","severity":1,"message":"204","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":19},{"ruleId":"174","severity":1,"message":"205","line":8,"column":10,"nodeType":"176","messageId":"177","endLine":8,"endColumn":31},{"ruleId":"174","severity":1,"message":"206","line":11,"column":3,"nodeType":"176","messageId":"177","endLine":11,"endColumn":19},{"ruleId":"174","severity":1,"message":"207","line":18,"column":8,"nodeType":"176","messageId":"177","endLine":18,"endColumn":13},{"ruleId":"174","severity":1,"message":"208","line":22,"column":10,"nodeType":"176","messageId":"177","endLine":22,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":23,"column":10,"nodeType":"176","messageId":"177","endLine":23,"endColumn":14},{"ruleId":"174","severity":1,"message":"209","line":29,"column":10,"nodeType":"176","messageId":"177","endLine":29,"endColumn":21},{"ruleId":"174","severity":1,"message":"210","line":53,"column":9,"nodeType":"176","messageId":"177","endLine":53,"endColumn":20},{"ruleId":"174","severity":1,"message":"211","line":66,"column":9,"nodeType":"176","messageId":"177","endLine":66,"endColumn":21},{"ruleId":"174","severity":1,"message":"212","line":78,"column":9,"nodeType":"176","messageId":"177","endLine":78,"endColumn":22},{"ruleId":"174","severity":1,"message":"213","line":81,"column":9,"nodeType":"176","messageId":"177","endLine":81,"endColumn":23},{"ruleId":"174","severity":1,"message":"214","line":85,"column":9,"nodeType":"176","messageId":"177","endLine":85,"endColumn":20},{"ruleId":"174","severity":1,"message":"215","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"207","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"216","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":43,"column":22,"nodeType":"219","messageId":"220","endLine":43,"endColumn":24},{"ruleId":"174","severity":1,"message":"207","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"216","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"221","line":14,"column":3,"nodeType":"176","messageId":"177","endLine":14,"endColumn":9},{"ruleId":"174","severity":1,"message":"222","line":20,"column":6,"nodeType":"176","messageId":"177","endLine":20,"endColumn":11},{"ruleId":"174","severity":1,"message":"223","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":34},{"ruleId":"224","severity":1,"message":"208","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":72,"column":9,"nodeType":"176","messageId":"177","endLine":72,"endColumn":18},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Content' is defined but never used.","'Gap' is defined but never used.","'useDispatch' is defined but never used.","'setSubscriptions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchVideoData'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'searchResults' is assigned a value but never used.","'arr' is assigned a value but never used.","'filtered' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","'useSelector' is defined but never used.","'State' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.","'setSearchParams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchVideoData' and 'progress'. Either include them or remove the dependency array. You can also do a functional update 'setProgress(p => ...)' if you only need 'progress' in the 'setProgress' call.",["227"],"'LoginButton' is defined but never used.","'ProfilePic' is defined but never used.","'CgProfile' is defined but never used.","'IoPersonCircleOutline' is defined but never used.","'signInWithGoogle' is defined but never used.","'axios' is defined but never used.","'changeUrl' is defined but never used.","'loadingUser' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","'handleGetUser' is assigned a value but never used.","'handlePostUser' is assigned a value but never used.","'handleState' is assigned a value but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Upload' is defined but never used.","'Props' is defined but never used.","'useRef' is defined but never used.","no-unused-vars","'checkUser' is assigned a value but never used.",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [fetchVideoData]",{"range":"232","text":"233"},"Update the dependencies array to be: [fetchVideoData, progress, searchResult]",{"range":"234","text":"235"},[754,756],"[fetchVideoData]",[1138,1152],"[fetchVideoData, progress, searchResult]"]