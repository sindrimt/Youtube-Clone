{"ast":null,"code":"import _slicedToArray from\"/Users/sindritomasson/Desktop/youtube/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Card from\"../Card/Card\";import{GridContainer,Outer}from\"./ContentStyles\";import axios from\"axios\";import\"./content.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContentDefault=function ContentDefault(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),videoResult=_useState4[0],setVideoResult=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),profileThumbnails=_useState6[0],setProfileThumbnails=_useState6[1];var API_KEY=\"AIzaSyA2jqu8DsVe541pB-A3pNX0Hg3gIDMpnQs\";//const amount = useSelector((state: State) => state.bank);\nuseEffect(function(){setIsLoading(true);fetchVideoData();},[]);var fetchVideoData=function fetchVideoData(){// Gives basic information about the video\nvar searchResults=\"https://www.googleapis.com/youtube/v3/search?key=\".concat(API_KEY,\"\\n                           &part=snippet,id&maxResults=20&q=rick&order=viewCount\");var searchResults2=\"https://www.googleapis.com/youtube/v3/videos?key=\".concat(API_KEY,\"&part=snippet&chart=mostPopular&maxResults=20\");axios(searchResults2).then(function(res){//console.log(res);\nvar videoTuple=new Map();var requests=res.data.items.map(function(video){//console.log(video);\n// Gives a more detailed information about the video\nvar url=\"https://www.googleapis.com/youtube/v3/videos?id=\".concat(video.id,\"&key=\").concat(API_KEY,\"\\n                     &part=snippet,contentDetails,statistics,status\");// Gives information about the channel\nvar profileUrl=\"https://www.googleapis.com/youtube/v3/channels?part=snippet&id=\".concat(video.snippet.channelId,\"&key=\").concat(API_KEY);// Sets the key in the Map to the videoId\n// console.log(video);\nvideoTuple.set(video.id,[]);// Two return statements separated by comma\n// The first return statement fills up the first position in the array in the Map with res.data\n// The second return statement fills up the second position in the array in the Map with the profile picture\n/**  The return statements does not run synchronously, but when the loop is done, the first and second\n           positions in the array will be filled up in the correct order since the return statements are independent **/return axios.get(url).then(function(res){// console.log(res.data);\nvideoTuple.get(video.id)[0]=res.data;//console.log(video.id.videoId);\n}),axios.get(profileUrl).then(function(res){//console.log(res);\n//console.log(res);\nvideoTuple.get(video.id)[1]=res.data.items[0].snippet.thumbnails.default.url;//console.log(video.id.videoId);\n});});// When all request are finished inside requests\nreturn Promise.all(requests).then(function(){var posts=[];var profilePictures=[];videoTuple.forEach(function(video){posts.push(video[0]);profilePictures.push(video[1]);});setVideoResult(posts);setProfileThumbnails(profilePictures);setIsLoading(false);});});};// Displaying loading while waiting for fetching data\nif(isLoading){return/*#__PURE__*/_jsx(\"section\",{className:\"outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"})});}// Filtrer ut alle undefined objects\nvar filteredArray=[];var filtered=videoResult===null||videoResult===void 0?void 0:videoResult.filter(function(element){if(element===undefined){return false;}filteredArray.push(element);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Outer,{children:/*#__PURE__*/_jsxs(GridContainer,{children:[console.log(\"Videoresult map here\"),console.log(videoResult),console.log(\"Filtered array\"),console.log(filteredArray),filteredArray===null||filteredArray===void 0?void 0:filteredArray.map(function(_ref,index){var items=_ref.items;// Checks if a maxres image exists\n// If it does: set maxres, else set highres\nvar imageRes=items[0].snippet.thumbnails.maxres?\"maxresdefault\":\"hqdefault\";var pp=profileThumbnails[index];return/*#__PURE__*/_jsx(Card,{title:items[0].snippet.title.slice(0,50),imageId:items[0].id,imageRes:imageRes,channel:items[0].snippet.channelTitle,profilePicture:pp},index);})]})})});};export default ContentDefault;","map":{"version":3,"sources":["/Users/sindritomasson/Desktop/youtube/frontend/src/components/Content/ContentDefault.tsx"],"names":["React","useState","useEffect","Card","GridContainer","Outer","axios","ContentDefault","isLoading","setIsLoading","videoResult","setVideoResult","profileThumbnails","setProfileThumbnails","API_KEY","fetchVideoData","searchResults","searchResults2","then","res","videoTuple","Map","requests","data","items","map","video","url","id","profileUrl","snippet","channelId","set","get","thumbnails","default","Promise","all","posts","profilePictures","forEach","push","filteredArray","filtered","filter","element","undefined","console","log","index","imageRes","maxres","pp","title","slice","channelTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../Card/Card\";\nimport { GridContainer, Outer } from \"./ContentStyles\";\n\nimport axios from \"axios\";\n\nimport \"./content.css\";\n\nconst ContentDefault: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<Boolean>(true);\n  const [videoResult, setVideoResult] = useState<any[]>();\n  const [profileThumbnails, setProfileThumbnails] = useState<any[]>([]);\n\n  const API_KEY = \"AIzaSyA2jqu8DsVe541pB-A3pNX0Hg3gIDMpnQs\";\n\n  //const amount = useSelector((state: State) => state.bank);\n  useEffect(() => {\n    setIsLoading(true);\n    fetchVideoData();\n  }, []);\n\n  const fetchVideoData = () => {\n    // Gives basic information about the video\n    const searchResults = `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}\n                           &part=snippet,id&maxResults=20&q=rick&order=viewCount`;\n\n    const searchResults2 = `https://www.googleapis.com/youtube/v3/videos?key=${API_KEY}&part=snippet&chart=mostPopular&maxResults=20`;\n\n    axios(searchResults2).then((res) => {\n      //console.log(res);\n      const videoTuple: any = new Map();\n\n      const requests = res.data.items.map((video: any) => {\n        //console.log(video);\n        // Gives a more detailed information about the video\n        const url = `https://www.googleapis.com/youtube/v3/videos?id=${video.id}&key=${API_KEY}\n                     &part=snippet,contentDetails,statistics,status`;\n\n        // Gives information about the channel\n        const profileUrl = `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${video.snippet.channelId}&key=${API_KEY}`;\n\n        // Sets the key in the Map to the videoId\n        // console.log(video);\n        videoTuple.set(video.id, []);\n\n        // Two return statements separated by comma\n        // The first return statement fills up the first position in the array in the Map with res.data\n        // The second return statement fills up the second position in the array in the Map with the profile picture\n\n        /**  The return statements does not run synchronously, but when the loop is done, the first and second\n           positions in the array will be filled up in the correct order since the return statements are independent **/\n\n        return (\n          axios.get(url).then((res) => {\n            // console.log(res.data);\n            videoTuple.get(video.id)[0] = res.data;\n            //console.log(video.id.videoId);\n          }),\n          axios.get(profileUrl).then((res) => {\n            //console.log(res);\n            //console.log(res);\n            videoTuple.get(video.id)[1] = res.data.items[0].snippet.thumbnails.default.url;\n            //console.log(video.id.videoId);\n          })\n        );\n      });\n\n      // When all request are finished inside requests\n      return Promise.all(requests).then(() => {\n        const posts: any = [];\n        const profilePictures: any = [];\n\n        videoTuple.forEach((video: any) => {\n          posts.push(video[0]);\n          profilePictures.push(video[1]);\n        });\n\n        setVideoResult(posts);\n        setProfileThumbnails(profilePictures);\n        setIsLoading(false);\n      });\n    });\n  };\n  // Displaying loading while waiting for fetching data\n  if (isLoading) {\n    return (\n      <section className=\"outer\">\n        <div className=\"loading\">Loading...</div>\n      </section>\n    );\n  }\n  // Filtrer ut alle undefined objects\n  let filteredArray: Array<any> = [];\n  const filtered = videoResult?.filter((element) => {\n    if (element === undefined) {\n      return false;\n    }\n    filteredArray.push(element);\n  });\n\n  return (\n    <>\n      <Outer>\n        <GridContainer>\n          {console.log(\"Videoresult map here\")}\n          {console.log(videoResult)}\n          {console.log(\"Filtered array\")}\n          {console.log(filteredArray)}\n\n          {filteredArray?.map(({ items }, index) => {\n            // Checks if a maxres image exists\n            // If it does: set maxres, else set highres\n            let imageRes: string = items[0].snippet.thumbnails.maxres ? \"maxresdefault\" : \"hqdefault\";\n            let pp: string = profileThumbnails[index];\n\n            return (\n              <Card\n                key={index}\n                title={items[0].snippet.title.slice(0, 50)}\n                imageId={items[0].id}\n                imageRes={imageRes}\n                channel={items[0].snippet.channelTitle}\n                profilePicture={pp}\n              />\n            );\n          })}\n        </GridContainer>\n      </Outer>\n    </>\n  );\n};\n\nexport default ContentDefault;\n"]},"metadata":{},"sourceType":"module"}